apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.database.movie"
        vectorDrawables.useSupportLibrary = true
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 2
        versionName "1.0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String" , "API_KEY" ,  "\"$THE_MOVIE_DATABASE_API_KEY\""
    }

    testOptions {
        unitTests.returnDefaultValues = true

        // Always show the result of every unit test, even if it passes.
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    buildTypes {

        denug {
            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = true

            //DATABASE BROWSER PORT NUMBER
            resValue("string", "PORT_NUMBER", "8081")
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    configurations.all {
        resolutionStrategy.force "com.android.support:support-annotations:${project.ext.androidSupportLibraryVersion}"
    }
    //display more than 100 errors
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
        }
    }
}

configurations {
    provided {
        dependencies.all {dep ->
            configurations.default.exclude group: dep.group, module:dep.name
        }
    }
    compile.extendsFrom provided
    //compile.exclude module: 'appcompat-v7'
}


ext{
    SUPPORT_LIB_VERSION = project.ext.androidSupportLibraryVersion
    DAGGER_VERSION = "2.11"
    OKHTTP_VERSION = "3.9.0"
    RETROFIT_VERSION = "2.3.0"
    GSON_VERSION = "2.8.2"
    GLIDE_VERSION = "4.5.0"
    LEAKCANARY_VERSION = "1.4"
    STETHO_VERSION = "1.5.0"
    POWERMOCK_VERSION = "1.7.3"
    ESPRESSO_VERSION = "3.0.1"
    MOCKITO_VERSION ="2.8.9"
    JUNIT_VERSION = "4.12"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation "com.google.code.gson:gson:${GSON_VERSION}"

    //Dependency Injection
    implementation "com.google.dagger:dagger:${DAGGER_VERSION}"
    annotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"

    //RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.8'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation "com.android.support:support-v4:${SUPPORT_LIB_VERSION}"
    implementation "com.android.support:design:${SUPPORT_LIB_VERSION}"
    implementation "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
    implementation "com.android.support:recyclerview-v7:${SUPPORT_LIB_VERSION}"
    implementation "com.android.support:cardview-v7:${SUPPORT_LIB_VERSION}"
    //implementation "com.android.support:palette-v7:${SUPPORT_LIB_VERSION}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    //GLIDE LIBRARY
    implementation "com.github.bumptech.glide:glide:${GLIDE_VERSION}"
    implementation "com.github.bumptech.glide:annotations:${GLIDE_VERSION}"
    annotationProcessor "com.github.bumptech.glide:compiler:${GLIDE_VERSION}"
    implementation ("com.github.bumptech.glide:okhttp3-integration:${GLIDE_VERSION}"){
        exclude group: 'glide-parent'
        exclude group: 'com.android.support'
    }

    //SQUARE LIBRARIES
    implementation "com.squareup.okhttp3:okhttp:${OKHTTP_VERSION}"
    implementation "com.squareup.okhttp3:logging-interceptor:${OKHTTP_VERSION}"
    implementation "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${RETROFIT_VERSION}"
    implementation 'com.squareup.okio:okio:1.13.0'


    //TO SEE SQLite TABLES IN THE BROWSER
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.1'

    //MEMORY LEAK LIBRARY (LeakCanary)
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${LEAKCANARY_VERSION}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"

    //FACEBOOK STETHO DEBUG BRIDGE
    debugImplementation "com.facebook.stetho:stetho:${STETHO_VERSION}"
    //debugImplementation "com.facebook.stetho:stetho-urlconnection:${STETHO_VERSION}
    debugImplementation "com.facebook.stetho:stetho-okhttp3:${STETHO_VERSION}"
    debugImplementation "com.facebook.stetho:stetho-js-rhino:${STETHO_VERSION}"


    //calculate method execution time (https://github.com/drayan85/hugo)
    //Unit Testing
    testImplementation "com.android.support:support-annotations:${SUPPORT_LIB_VERSION}"
    testImplementation "junit:junit:${JUNIT_VERSION}"
    testImplementation "org.mockito:mockito-core:${MOCKITO_VERSION}"
    testImplementation "org.powermock:powermock-module-junit4:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-api-mockito2:${POWERMOCK_VERSION}"
    testImplementation 'org.hamcrest:hamcrest-all:1.3'

    // Android Testing Support Library's runner and rules (Instrumental Testing)
    androidTestImplementation "com.android.support:support-annotations:${SUPPORT_LIB_VERSION}"
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'

    // Optional -- Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'

    // Optional -- UI testing with Espresso
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${ESPRESSO_VERSION}"
    androidTestImplementation "com.android.support.test.espresso:espresso-web:${ESPRESSO_VERSION}"
    //androidTestImplementation "com.android.support.test.espresso:espresso-intents:${ESPRESSO_VERSION}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}"
    androidTestImplementation "com.android.support.test.espresso:espresso-idling-resource:${ESPRESSO_VERSION}"
    // Optional -- Mockito framework
    androidTestImplementation "org.mockito:mockito-core:${MOCKITO_VERSION}"
    // Optional -- UI testing with UI Automator
    //androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
}
